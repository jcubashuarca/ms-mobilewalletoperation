spring.application.name= service-mobilewalletoperation
# este puerto debe ir en el docker compose
server.port=9045
#server.port=${PORT:0}
management.endpoints.web.exposure.include=*
#Spring Data
# se uso el  host.docker.internal ya que el app no conectaba con el mongo en el contenedor
spring.data.mongodb.uri=mongodb://host.docker.internal:27017/bdyanki
spring.data.mongodb.auto-index-creation=true

#Log
logging.level.com.bootcamp.java=Info
message.demo=leido desde local
#Spring Cloud Config 
spring.config.import=optional:configserver:http://localhost:9080
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone = http://localhost:8761/eureka
eureka.instance.instance-id= =${spring.application.name}:${spring.application.instance_id:9045}
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
logging.level.org.springframework.data.mongodb.core.ReactiveMongoTemplate=DEBUG

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
kafka.topic.balance.name=balance-topic
